{"version":3,"file":"static/js/cast.293dc55b.chunk.js","mappings":"wPAEaA,EAAYC,EAAAA,GAAAA,GAAH,uOAWTC,EAAWD,EAAAA,GAAAA,IAAH,uGAMRE,EAAQF,EAAAA,GAAAA,IAAH,wHAOLG,EAAcH,EAAAA,GAAAA,KAAH,oGAMXI,EAAYJ,EAAAA,GAAAA,EAAH,kFAMTK,EAAeL,EAAAA,GAAAA,IAAH,iEAIZM,EAAYN,EAAAA,GAAAA,GAAH,2CAGTO,EAAYP,EAAAA,GAAAA,GAAH,2C,SCjCTQ,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACtC,OACC,UAACZ,EAAD,WACEU,GACA,SAACR,EAAD,CAAUW,IAAG,0CAAqCH,GAAOI,IAAKH,KAE9D,UAACR,EAAD,YACC,SAACC,EAAD,iBACA,SAACC,EAAD,kCAEF,UAACC,EAAD,YACC,SAACC,EAAD,UAAYI,KACZ,SAACH,EAAD,UAAYI,SAIf,EC1BYG,EAASd,EAAAA,GAAAA,GAAH,mFCENe,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3B,OACC,SAACF,EAAD,UACEE,EACAA,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIR,EAAoC,EAApCA,KAAMS,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChC,OACC,SAACZ,EAAD,CAECC,IAAKW,EACLV,KAAMA,EACNC,KAAMQ,GAHDD,EAMP,KAED,qEAGH,EClBc,SAASG,IACvB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAON,EAAP,KAAaO,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAGTC,MAAM,sCAAD,OAAuCH,EAAvC,4BAFW,mCAEX,oBACHI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,gBAAGZ,EAAH,EAAGA,KAAH,OAAcO,EAAQP,EAAtB,GACP,GAAE,CAACQ,KAGH,iCACC,kCACA,SAACT,EAAD,CAAWC,KAAMA,MAGnB,C","sources":["components/Actors/ActorCard.styled.js","components/Actors/ActorCard.jsx","components/Actors/ActorList.styled.js","components/Actors/ActorList.jsx","pages/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ActorItem = styled.li`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\tborder: 1px solid #fff;\n\tborder-radius: 5px;\n\tmax-width: 120px;\n\tpadding: 5px;\n\tmargin: 5px;\n\tword-wrap: break-word;\n`\nexport const ActorImg = styled.img`\nmax-width: 120px;\nmax-height: 180px;\nborder-radius: 5px;\noverflow: hidden;\n`\nexport const NoImg = styled.div`\nwidth: 120px;\nheight: 180px;\nbackground-color:#fff; \nborder-radius: 5px;\noverflow: hidden;\n`\nexport const NoImgSimvol = styled.span`\ndisplay: block;\ntext-align: center;\nfont-size: 100px;\nfont-weight: 700;\n`\nexport const NoImgText = styled.p`\ntext-align: center;\nfont-size: 15px;\nfont-weight: 700;\n`\n\nexport const ItemTextWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\n`\nexport const ActorName = styled.h3`\nfont-weight: 700;\n`\nexport const ActorRole = styled.h3`\nfont-weight: 500;\n`","import PropTypes from \"prop-types\";\nimport {\n\tActorItem,\n\tActorImg,\n\tNoImg,\n\tNoImgSimvol,\n\tNoImgText,\n\tItemTextWrap,\n\tActorName,\n\tActorRole\n} from \"./ActorCard.styled\";\n\nexport const ActorCard = ({ img, name, role }) => {\n\treturn (\n\t\t<ActorItem>\n\t\t\t{img ?\n\t\t\t\t<ActorImg src={`https://image.tmdb.org/t/p/w500/${img}`} alt={name} />\n\t\t\t\t:\n\t\t\t\t<NoImg>\n\t\t\t\t\t<NoImgSimvol>?</NoImgSimvol>\n\t\t\t\t\t<NoImgText>'Oops no photo'</NoImgText>\n\t\t\t\t</NoImg>}\n\t\t\t<ItemTextWrap>\n\t\t\t\t<ActorName>{name}</ActorName>\n\t\t\t\t<ActorRole>{role}</ActorRole>\n\t\t\t</ItemTextWrap>\n\t\t</ActorItem>\n\t)\n}\n\nActorCard.propTypes = {\n\timg: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\trole: PropTypes.string.isRequired,\n}","import styled from \"styled-components\";\n\nexport const Actors = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tlist-style: none;\n`","import PropTypes from \"prop-types\";\nimport { ActorCard } from \"components/Actors/ActorCard\";\nimport { Actors } from \"./ActorList.styled\";\n\nexport const ActorList = ({ cast }) => {\n\treturn (\n\t\t<Actors>\n\t\t\t{cast ?\n\t\t\t\tcast.map(({ id, name, character, profile_path }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ActorCard\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\timg={profile_path}\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\trole={character}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<h2>Unfortunately no information about cast</h2>}\n\t\t</Actors>\n\t)\n}\nActorList.propTypes = {\n\tcast: PropTypes.arrayOf(PropTypes.object),\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ActorList } from \"components/Actors/ActorList\";\n\nexport default function Cast() {\n\tconst [cast, setCast] = useState(null);\n\tconst { movieId } = useParams();\n\n\tuseEffect(() => {\n\t\tconst API_KEY = '2fcef87760cac0a14e527e71c6ea2c67';\n\n\t\tfetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\t\t\t.then(r => r.json())\n\t\t\t.then(({ cast }) => setCast(cast))\n\t}, [movieId])\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Cast</h1>\n\t\t\t<ActorList cast={cast} />\n\t\t</>\n\t)\n}"],"names":["ActorItem","styled","ActorImg","NoImg","NoImgSimvol","NoImgText","ItemTextWrap","ActorName","ActorRole","ActorCard","img","name","role","src","alt","Actors","ActorList","cast","map","id","character","profile_path","Cast","useState","setCast","movieId","useParams","useEffect","fetch","then","r","json"],"sourceRoot":""}